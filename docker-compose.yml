version: '3.1'

services:

  angular:
    image: jelmerdijkstra/angular-se-track:latest
    ports:
      - "4200:80"

  performer:
    image: jelmerdijkstra/performer-service:latest
    ports:
      - "6060:6060"
    networks:
      - micro-network
    depends_on:
      - mysql
    environment:
      - spring.datasource.url=jdbc:mysql://mysql:3306/performer?createDatabaseIfNotExist=true
      - concert.api=http://host.docker.internal:9090/concert/

  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: performer
    ports:
      - "3306:3306"
    networks:
      - micro-network
    volumes:
      - mysql_data:/var/lib/mysql

  concert:
    image: jelmerdijkstra/concert-service:latest
    ports:
      - "9090:9090"
    networks:
      - micro-network
    depends_on:
      - postgres
    environment:
      - performer.api=http://host.docker.internal:6060/performer/
      - review.api=http://host.docker.internal:7070/review/

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: jelmer
      POSTGRES_PASSWORD: jelmer
    ports:
      - "5432:5432"
    networks:
      - micro-network
    volumes:
      - pgdata:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - "8090:8080"
    networks:
      - micro-network

  review:
    image: jelmerdijkstra/review-service:latest
    ports:
      - "7070:7070"
    networks:
      - micro-network
    depends_on:
      - mongo
    environment:
      - SPRING_DATA_MONGODB_HOST=mongo:27017
      - SPRING_DATA_MONGODB_DATABASE=reviews
      - concert.api=http://host.docker.internal:9090/concert/

  mongo:
    image: mongo
    restart: always
    hostname: mongo
    networks:
      - micro-network
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - micro-network
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017

volumes:
  pgdata:
  mongo_data:
  mysql_data:

networks:
  micro-network:
    driver: bridge
